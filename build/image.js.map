{"version":3,"sources":["../server/image.js"],"names":[],"mappings":"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","file":"image.js","sourcesContent":["const r = require('rethinkdb');\r\nconst db = require('./db.js');\r\n\r\nvar submitImage = function(req, res, file) {\r\n    return new Promise(function(resolve, reject) {\r\n        // check image size and reject if necessary\r\n        if(file.size>6000000) {\r\n            reject(\"BIG\");\r\n            return;\r\n        }\r\n        \r\n        console.log(\"File info: \" + JSON.stringify(file));\r\n        \r\n        // create image record pointing to file name\r\n        var img = {\r\n            filename: file.filename,\r\n            originalname: file.originalname,\r\n            size: file.size,\r\n            date: new Date(),\r\n            status: 0,\r\n            ip: req.ip,\r\n            host: req.hostname\r\n        };\r\n        db.connect().then(function(conn) {\r\n        r.table(\"Images\").insert(img).run(conn)\r\n            .then(function(dbres) {\r\n                //TODO: Check for error\r\n                console.log(\"Inserted image [\" + file.filename + \"] at \" + img.date);\r\n                resolve(\"OK\");\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nvar changeStatus = function(imgid, status) {\r\n    return new Promise(function(resolve, reject) {\r\n        db.connect().then(function(conn) {\r\n            r.table(\"Images\").get(imgid).update({status: status})\r\n                .run(conn)\r\n                .then(function(dbres) {\r\n                   console.log(\"Changed image status [\" + imgid + \"] to \" + status);\r\n                   resolve(\"OK\"); \r\n                });\r\n        });\r\n    });\r\n}\r\n\r\nvar approveImage = function(imgid) {\r\n    return changeStatus(imgid, 1);\r\n}\r\n\r\nvar rejectImage = function(imgid) {\r\n    return changeStatus(imgid, 2);\r\n}\r\n\r\nvar processImageChanges = function(state, changes) {\r\n    var imglist = state.get(\"Images\");\r\n    var changed = false;\r\n    if(changes.old_offset || changes.old_offset===0) {\r\n        imglist=imglist.delete(changes.old_offset);\r\n        changed = true;\r\n        console.log(\"Removing image \" + changes.old_offset);\r\n    }\r\n    if(changes.new_offset || changes.new_offset===0) {\r\n        imglist = imglist.insert(changes.new_offset, changes.new_val);\r\n        changed = true;\r\n        console.log(\"Adding image \" + changes.new_offset);\r\n    }\r\n    if(changed) {\r\n        return state.set(\"Images\", imglist);        \r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexports.submit = submitImage;\r\nexports.approve = approveImage;\r\nexports.reject = rejectImage;\r\nexports.processImageChanges = processImageChanges;\r\n"]}