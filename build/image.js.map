{"version":3,"sources":["../server/image.js"],"names":[],"mappings":"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","file":"image.js","sourcesContent":["const r = require('rethinkdb');\r\nconst db = require('./db.js');\r\nconst gm = require('gm');\r\nconst path = require('path');\r\n\r\nvar submitImage = function (req, res, file) {\r\n    return new Promise(function (resolve, reject) {\r\n        // check image size and reject if necessary\r\n        if (file.size > 6000000) {\r\n            reject(\"BIG\");\r\n            return;\r\n        }\r\n\r\n        console.log(\"File info: \" + JSON.stringify(file));\r\n\r\n        // create image record pointing to file name\r\n        var img = {\r\n            filename: file.filename,\r\n            originalname: file.originalname,\r\n            size: file.size,\r\n            date: new Date(),\r\n            status: 0,\r\n            ip: req.ip,\r\n            host: req.hostname\r\n        };\r\n        db.connect().then(function (conn) {\r\n            r.table(\"Images\").insert(img).run(conn)\r\n                .then(function (dbres) {\r\n                    //TODO: Check for error\r\n                    console.log(\"Inserted image [\" + file.filename + \"] at \" + img.date);\r\n                    resolve(\"OK\");\r\n                });\r\n        });\r\n    });\r\n}\r\n\r\nvar changeStatus = function (imgid, status) {\r\n    return new Promise(function (resolve, reject) {\r\n        db.connect().then(function (conn) {\r\n            r.table(\"Images\").get(imgid).update({ status: status })\r\n                .run(conn)\r\n                .then(function (dbres) {\r\n                    console.log(\"Changed image status [\" + imgid + \"] to \" + status);\r\n                    resolve(\"OK\");\r\n                });\r\n        });\r\n    });\r\n}\r\n\r\nvar approveImage = function (imgid) {\r\n    return changeStatus(imgid, 1);\r\n}\r\n\r\nvar rejectImage = function (imgid) {\r\n    return changeStatus(imgid, 2);\r\n}\r\n\r\nvar rotateImage = function rotateImage(imgid, left) {\r\n    return new Promise(function (resolve, reject) {\r\n        var rotate = 0;\r\n        var theimg;\r\n        db.connect().then(function (conn) {\r\n            return r.table(\"Images\").get(imgid).run(conn)\r\n                .then(function (img) {\r\n                    theimg = img;\r\n                    var imgfile = path.join(process.env.CELEB_IMAGE_PATH, theimg.filename);\r\n                    console.log(\"Rotating image file at \" + imgfile);\r\n                    gm(imgfile)\r\n                        .noProfile()\r\n                        .rotate('black', left ? -90 : 90)\r\n                        .write(imgfile, function (err) {\r\n                            if (err) {\r\n                                console.log(\"Error rotating image: \" + JSON.stringify(err));\r\n                                reject(err);\r\n                            }\r\n                            else {\r\n                                rotate = img.rotation || 0;\r\n                                rotate = rotate + 1;\r\n                                r.table(\"Images\").get(imgid).update({ rotation: rotate }).run(conn)\r\n                                    .then(function (dbres) {\r\n                                        console.log(\"Changed image rotation [\" + imgid + \"] to \" + rotate);\r\n                                        resolve(\"OK\");\r\n                                    });\r\n                            }\r\n                        });\r\n                });\r\n        });\r\n    });\r\n}\r\n\r\nvar processImageChanges = function (state, changes) {\r\n    var imglist = state.get(\"Images\");\r\n    var changed = false;\r\n    if (changes.old_offset || changes.old_offset === 0) {\r\n        imglist = imglist.delete(changes.old_offset);\r\n        changed = true;\r\n        console.log(\"Removing image \" + changes.old_offset);\r\n    }\r\n    if (changes.new_offset || changes.new_offset === 0) {\r\n        imglist = imglist.insert(changes.new_offset, changes.new_val);\r\n        changed = true;\r\n        console.log(\"Adding image \" + changes.new_offset);\r\n    }\r\n    if (changed) {\r\n        return state.set(\"Images\", imglist);\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexports.submit = submitImage;\r\nexports.approve = approveImage;\r\nexports.reject = rejectImage;\r\nexports.rotate = rotateImage;\r\nexports.processImageChanges = processImageChanges;\r\n"]}